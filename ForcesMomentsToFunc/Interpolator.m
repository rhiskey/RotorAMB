function [fitresult, gof] = Biharmonic_Interp(X, Y, F_tr, ForM, fittype)
%CREATEFIT1(X,Y,F_TR)
%  Create a fit.
%
%  Data for 'Biharmonic_Interp' fit:
%      X Input : X
%      Y Input : Y
%      Z Output: F_tr
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 30-Nov-2019 07:53:15


%% Fit: 'Biharmonic_Interp'.
[xData, yData, zData] = prepareSurfaceData( X, Y, F_tr );

% Set up fittype and options.
ft = fittype;

% Fit model to data.
[fitresult, gof] = fit( [xData, yData], zData, ft, 'Normalize', 'on' );

% Plot fit with data.
if fittype == 'biharmonicinterp'
    figure( 'Name', 'Biharmonic_Interp' );
end
if fittype == 'cubicinterp'
    figure( 'Name', 'Cubic_Interp' );   
end
h = plot( fitresult, [xData, yData], zData );
if fittype == 'biharmonicinterp'
    title('Бигармоническая интерполяция');
    legend( h, 'Biharmonic_Interp', 'F  vs. Q, RPM', 'Location', 'NorthEast', 'Interpreter', 'none' );
end

if fittype == 'cubicinterp'
    title('Кубическая интерполяция');
    legend( h, 'Cubic_Interp', 'F  vs. Q, RPM', 'Location', 'NorthEast', 'Interpreter', 'none' );
end

% Label axes
xlabel( 'Q, л/мин', 'Interpreter', 'none' );
ylabel( 'RPM', 'Interpreter', 'none' );
if ForM == 0
    zlabel( 'F, Н', 'Interpreter', 'none' );
else
    zlabel( 'M, Н*m', 'Interpreter', 'none' );
end
grid on
view( -9.8, 17.4 );



